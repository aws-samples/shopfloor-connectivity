/*
 Copyright (c) 2021. Amazon.com, Inc. or its affiliates. All Rights Reserved.
 Licensed under the Amazon Software License (the "License"). You may not use this file except in
 compliance with the License. A copy of the License is located at :

     http://aws.amazon.com/asl/

 or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific
 language governing permissions and limitations under the License.

 */

//SFC protocol service

syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "Types.proto";
import "Metrics.proto";

package com.amazonaws.sfc.ipc;

option java_multiple_files = true;

// gRPC service to stream source data from server to SFC code
service ProtocolAdapterService {
  // Reads values, server side streaming
  rpc ReadValues(ReadValuesRequest) returns(stream ReadValuesReply) {}
  rpc ReadMetrics(ReadMetricsRequest) returns(stream MetricsDataMessage){}
  rpc InitializeAdapter(InitializeAdapterRequest) returns (InitializeAdapterResponse){}
}


message InitializeAdapterResponse{
  bool initialized = 1;
  string error = 2;
}


// Request for ReadValues
message ReadValuesRequest{
  // Sources and channels to read
  repeated SourceReadValueRequest sources = 1;
  // Read interval
  int64 interval = 2;
}

// Source and its channels to read
message SourceReadValueRequest {
  // ID of the source
  string sourceID = 1;
  // IDs of the channels
  repeated string channels = 2;
}

// Reply containing read source/channel values
message ReadValuesReply{
  repeated SourceReadValuesReply sources = 1;
  bytes compressed = 2;
}

// Values fro a single source
message SourceReadValuesReply {
  // ID of the source
  string sourceID = 1;
  // Channel values
  map<string, ChannelValue> values = 2;
  // Source/server level timestamp
  google.protobuf.Timestamp timestamp = 3;
  // Read error
  string error = 4;

}

